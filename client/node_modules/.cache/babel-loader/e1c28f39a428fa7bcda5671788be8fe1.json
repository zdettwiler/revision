{"ast":null,"code":"import _classCallCheck from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zach/code/revision/client/src/components/Exercise/Exercise.js\";\nimport React, { Component } from 'react';\nimport './Exercise.css';\nimport QuestionAnswer from 'components/QuestionAnswer/QuestionAnswer';\nimport ProgressTracker from 'components/ProgressTracker/ProgressTracker';\nimport ExerciseResults from 'components/ExerciseResults/ExerciseResults';\n\nvar Exercise =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Exercise, _Component);\n\n  function Exercise(props) {\n    var _this;\n\n    _classCallCheck(this, Exercise);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Exercise).call(this, props));\n    _this.state = {\n      exercise: [],\n      currentQuestion: 0,\n      status: 'no-exercise'\n    };\n    return _this;\n  }\n\n  _createClass(Exercise, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.set !== undefined) {\n        this.createExercise();\n      }\n    }\n  }, {\n    key: \"createExercise\",\n    value: function createExercise() {\n      var _this2 = this;\n\n      var exercise = [];\n      var leftQuestions = 'chosenCategory' in this.props && 'category' in this.props ? this.props.set.filter(function (question) {\n        return question[_this2.props.category] === _this2.props.chosenCategory;\n      }) : this.props.set;\n      var nextQuestionId;\n\n      while (leftQuestions.length > 0) {\n        nextQuestionId = Math.round((leftQuestions.length - 1) * Math.random());\n        exercise.push({\n          question: leftQuestions[nextQuestionId][this.props.question],\n          answer: leftQuestions[nextQuestionId][this.props.answer],\n          response: undefined,\n          result: undefined\n        });\n        leftQuestions.splice(nextQuestionId, 1);\n\n        if (exercise.length >= this.props.nbQuestions) {\n          break;\n        }\n      }\n\n      this.setState({\n        exercise: exercise,\n        status: 'revising'\n      });\n    }\n  }, {\n    key: \"checkAnswer\",\n    value: function checkAnswer(value) {\n      // console.log(value)\n      var currentQuestion = this.state.currentQuestion;\n      var exercise = this.state.exercise;\n      exercise[currentQuestion].response = value;\n      exercise[currentQuestion].result = exercise[currentQuestion].answer.split(', ').includes(value) ? 'success' : 'fail';\n      currentQuestion++;\n      var status = currentQuestion === exercise.length ? 'finished' : this.state.status;\n      this.setState({\n        exercise: exercise,\n        currentQuestion: currentQuestion,\n        status: status\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"Exercise\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.status === 'revising' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ProgressTracker, {\n        progress: this.state.exercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(QuestionAnswer, {\n        currentQuestion: this.state.exercise[this.state.currentQuestion].question,\n        onSubmit: this.checkAnswer.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), this.state.status === 'no-exercise' && 'no exercise available', this.state.status === 'finished' && React.createElement(ExerciseResults, {\n        exercise: this.state.exercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Exercise;\n}(Component);\n\nexport default Exercise;","map":{"version":3,"sources":["/Users/zach/code/revision/client/src/components/Exercise/Exercise.js"],"names":["React","Component","QuestionAnswer","ProgressTracker","ExerciseResults","Exercise","props","state","exercise","currentQuestion","status","set","undefined","createExercise","leftQuestions","filter","question","category","chosenCategory","nextQuestionId","length","Math","round","random","push","answer","response","result","splice","nbQuestions","setState","value","split","includes","checkAnswer","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Exercise.css'\nimport QuestionAnswer from 'components/QuestionAnswer/QuestionAnswer'\nimport ProgressTracker from 'components/ProgressTracker/ProgressTracker'\nimport ExerciseResults from 'components/ExerciseResults/ExerciseResults'\n\nclass Exercise extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      exercise: [],\n      currentQuestion: 0,\n      status: 'no-exercise'\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.set !== undefined) {\n      this.createExercise()\n    }\n  }\n\n  createExercise() {\n    let exercise = []\n\n    let leftQuestions = 'chosenCategory' in this.props && 'category' in this.props\n      ? this.props.set.filter(question => {\n          return question[this.props.category] === this.props.chosenCategory\n        })\n      : this.props.set\n\n    let nextQuestionId\n\n    while (leftQuestions.length > 0) {\n      nextQuestionId = Math.round((leftQuestions.length-1) * Math.random())\n\n      exercise.push({\n        question: leftQuestions[ nextQuestionId ][this.props.question],\n        answer: leftQuestions[ nextQuestionId ][this.props.answer],\n        response: undefined,\n        result: undefined\n      })\n\n      leftQuestions.splice(nextQuestionId, 1)\n\n      if (exercise.length >= this.props.nbQuestions) {\n        break\n      }\n    }\n    this.setState({ exercise, status: 'revising' })\n  }\n\n  checkAnswer(value) {\n    // console.log(value)\n    let currentQuestion = this.state.currentQuestion\n    let exercise = this.state.exercise\n\n    exercise[currentQuestion].response = value\n    exercise[currentQuestion].result = exercise[currentQuestion].answer.split(', ').includes(value)\n      ? 'success'\n      : 'fail'\n\n    currentQuestion++\n    let status = currentQuestion === exercise.length\n      ? 'finished'\n      : this.state.status\n\n    this.setState({ exercise, currentQuestion, status })\n\n  }\n\n  render() {\n    return (\n      <div className=\"Exercise\">\n        {this.state.status === 'revising' && (\n          <div>\n            <ProgressTracker\n              progress={this.state.exercise}\n            />\n            <QuestionAnswer\n              currentQuestion={this.state.exercise[this.state.currentQuestion].question}\n              onSubmit={this.checkAnswer.bind(this)}\n            />\n          </div>\n        )}\n\n        {this.state.status === 'no-exercise' && (\n          'no exercise available'\n        )}\n\n        {this.state.status === 'finished' && (\n          <ExerciseResults\n            exercise={this.state.exercise}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Exercise;\n"]},"metadata":{},"sourceType":"module"}