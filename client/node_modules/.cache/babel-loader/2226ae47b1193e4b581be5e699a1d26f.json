{"ast":null,"code":"import _classCallCheck from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/zach/code/revision/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/zach/code/revision/client/src/components/Revise/Revise.js\";\nimport React, { Component } from 'react';\nimport QuestionAnswer from 'components/QuestionAnswer/QuestionAnswer';\nimport ProgressTracker from 'components/ProgressTracker/ProgressTracker';\nimport vocabDuffENTG from 'vocabDuffENTG';\n\nvar Revise =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Revise, _Component);\n\n  function Revise(props) {\n    var _this;\n\n    _classCallCheck(this, Revise);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Revise).call(this, props));\n    _this.state = {\n      set: vocabDuffENTG,\n      chapters: _this.getChaptersArray(),\n      nbQuestions: _this.props.match.params.nbQuestions,\n      exercise: [],\n      currentQuestion: 0,\n      status: 'loading'\n    };\n    _this.getChaptersArray = _this.getChaptersArray.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createExercise = _this.createExercise.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Revise, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.match.params.set && this.props.match.params.chapters && this.props.match.params.nbQuestions) {\n        this.createExercise();\n      }\n    }\n  }, {\n    key: \"getChaptersArray\",\n    value: function getChaptersArray() {\n      var chapters = []; // split with comma the different elements of chapter selection\n\n      this.props.match.params.chapters.split(',').forEach(function (chap) {\n        if (chap.match(/\\d+-\\d+/g)) {\n          // if range\n          var boundaries = chap.match(/\\d+/g).map(function (b) {\n            return parseInt(b);\n          });\n\n          for (var i = boundaries[0]; i <= boundaries[1]; i++) {\n            chapters.push(i);\n          }\n        } else {\n          // if a single chapter\n          chapters.push(parseInt(chap));\n        }\n      });\n      return chapters;\n    }\n  }, {\n    key: \"createExercise\",\n    value: function createExercise() {\n      var _this2 = this;\n\n      var exercise = [];\n      var leftQuestions = this.state.set.filter(function (question) {\n        return _this2.state.chapters.includes(question.chapter);\n      });\n      var nextQuestionId;\n\n      while (leftQuestions.length > 0) {\n        nextQuestionId = Math.round((leftQuestions.length - 1) * Math.random());\n        exercise.push({\n          question: leftQuestions[nextQuestionId].greek,\n          answer: leftQuestions[nextQuestionId].english,\n          response: undefined,\n          result: undefined\n        });\n        leftQuestions.splice(nextQuestionId, 1);\n\n        if (exercise.length >= this.state.nbQuestions) {\n          break;\n        }\n      }\n\n      this.setState({\n        exercise: exercise,\n        status: 'revising'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.exercise);\n      return React.createElement(\"div\", {\n        className: \"Revise\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.status === 'revising' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ProgressTracker, {\n        progress: this.state.exercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(QuestionAnswer, {\n        currentQuestion: this.state.exercise[this.state.currentQuestion].question // onSubmit={this.checkAnswer.bind(this)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), this.state.status === 'loading' && 'loading...');\n    }\n  }]);\n\n  return Revise;\n}(Component);\n\nexport default Revise;","map":{"version":3,"sources":["/Users/zach/code/revision/client/src/components/Revise/Revise.js"],"names":["React","Component","QuestionAnswer","ProgressTracker","vocabDuffENTG","Revise","props","state","set","chapters","getChaptersArray","nbQuestions","match","params","exercise","currentQuestion","status","bind","createExercise","split","forEach","chap","boundaries","map","b","parseInt","i","push","leftQuestions","filter","question","includes","chapter","nextQuestionId","length","Math","round","random","greek","answer","english","response","undefined","result","splice","setState","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport QuestionAnswer from 'components/QuestionAnswer/QuestionAnswer'\nimport ProgressTracker from 'components/ProgressTracker/ProgressTracker'\n\nimport vocabDuffENTG from 'vocabDuffENTG'\n\nclass Revise extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      set: vocabDuffENTG,\n      chapters: this.getChaptersArray(),\n      nbQuestions: this.props.match.params.nbQuestions,\n      exercise: [],\n      currentQuestion: 0,\n      status: 'loading'\n    }\n\n    this.getChaptersArray = this.getChaptersArray.bind(this)\n    this.createExercise = this.createExercise.bind(this)\n  }\n\n  componentDidMount() {\n    if (this.props.match.params.set\n    && this.props.match.params.chapters\n    && this.props.match.params.nbQuestions) {\n      this.createExercise()\n    }\n  }\n\n  getChaptersArray() {\n    let chapters = []\n\n    // split with comma the different elements of chapter selection\n    this.props.match.params.chapters.split(',').forEach(chap => {\n      if (chap.match(/\\d+-\\d+/g)) { // if range\n        let boundaries = chap.match(/\\d+/g).map(b => parseInt(b))\n        for (let i=boundaries[0]; i<=boundaries[1]; i++) {\n          chapters.push(i)\n        }\n      } else { // if a single chapter\n        chapters.push(parseInt(chap))\n      }\n    })\n\n    return chapters\n  }\n\n  createExercise() {\n    let exercise = []\n\n    let leftQuestions = this.state.set.filter(question => {\n      return this.state.chapters.includes(question.chapter)\n    })\n\n    let nextQuestionId\n\n    while (leftQuestions.length > 0) {\n      nextQuestionId = Math.round((leftQuestions.length-1) * Math.random())\n\n      exercise.push({\n        question: leftQuestions[ nextQuestionId ].greek,\n        answer: leftQuestions[ nextQuestionId ].english,\n        response: undefined,\n        result: undefined\n      })\n\n      leftQuestions.splice(nextQuestionId, 1)\n\n      if (exercise.length >= this.state.nbQuestions) {\n        break\n      }\n    }\n\n    this.setState({ exercise, status: 'revising' })\n  }\n\n  render() {\n    console.log(this.state.exercise)\n    return (\n      <div className='Revise'>\n        {this.state.status === 'revising' && (\n          <div>\n            <ProgressTracker\n              progress={this.state.exercise}\n            />\n            <QuestionAnswer\n              currentQuestion={this.state.exercise[this.state.currentQuestion].question}\n              // onSubmit={this.checkAnswer.bind(this)}\n            />\n          </div>\n        )}\n\n        {this.state.status === 'loading' && (\n          'loading...'\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default Revise\n"]},"metadata":{},"sourceType":"module"}